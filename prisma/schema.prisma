generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Payments {
  id    Int     @id @default(autoincrement())
  value Float
  method String
  identification String
  year Int
  month String
  description String
  created_at DateTime @default(now())

  @@map("payments")
}


model Contractors {
  id    Int     @id @default(autoincrement())
  email String  @unique
  first_name  String
  middle_name String?
  last_name  String
  urlProfile String?
  urlDocumentProf String?
  urlPrimaryResidencyProf String?
  urlSecondaryResidencyProf String?
  status Status @default(ACTIVE)
  ein String?
  acceptTerms Boolean
  type String
  identification String
  dob DateTime
  telephone String
  created_at   DateTime @default(now())
  account   Accounts?  @relation(fields: [fk_id_account], references: [id])
  fk_id_account Int? @unique

  address     Adresseses[]
  services     Services[]
  @@map("contractors")
}


model Clients {
  id    Int     @id @default(autoincrement())
  name  String
  created_at   DateTime @default(now())
  account   Accounts?  @relation(fields: [fk_id_account], references: [id])
  fk_id_account Int? @unique
  startHour Int
  endHour Int
  monday Boolean
  tuesday Boolean
  wednesday Boolean
  thursday Boolean
  friday Boolean
  saturday Boolean
  sunday Boolean
  services Services[]
  status Boolean @default(true)
  @@map("clients")
}

model Adresseses {
      id    Int     @id @default(autoincrement())
      address  String
      city String
      zipcode String
      state String
      country String
      contractor   Contractors  @relation(fields: [fk_id_contractor], references: [id])
      fk_id_contractor Int
      created_at   DateTime @default(now())
      @@map("addresses")
}

model Accounts {
      id    Int     @id @default(autoincrement())
      access Access
      username String
      password String
      resetPassword Boolean @default(false)
      status Status @default(INACTIVE)
      created_at   DateTime @default(now())
      contractor  Contractors?
      client  Clients?
      @@map("accounts")
}


model Services {
  id    Int     @id @default(autoincrement())
  contractor       Contractors  @relation(fields: [fk_id_contractor], references: [id])
  fk_id_contractor Int
  client       Clients  @relation(fields: [fk_id_client], references: [id])
  fk_id_client Int
  created_at   DateTime @default(now())
  monday Boolean
  tuesday Boolean
  wednesday Boolean
  thursday Boolean
  friday Boolean
  satuday Boolean
  sunday Boolean
  quarter Quarter[]
  @@map("services")
}

model Quarter {
  id Int  @id @default(autoincrement())
  contractor Services  @relation(fields: [fk_id_service], references: [id])
  fk_id_service Int
  value_hour Float
  year Int
  month String
  appointments   Appointments[]
  @@map("quarter")
}

model Appointments {
    id    Int     @id @default(autoincrement())
    date_at DateTime
    value Float
    quarter   Quarter  @relation(fields: [fk_id_quarter], references: [id])
    created_at   DateTime @default(now())
    fk_id_quarter Int
    @@map("appointments")
}

enum Access {
  CONTRACTOR
  CLIENT
  GLOBAL
  ADMIN
}

enum Role {
  CONTRACTOR
  CLIENT
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
}

enum Method {
  CHECK
  TRANSFER
  VENMO
}